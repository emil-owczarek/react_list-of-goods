{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleSortClick","setState","handleReverseClick","prevState","handleResetClick","visibleGoods","goods","sortedGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","this","className","type","onClick","map","good","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,gBAAkB,SAACF,GACjB,EAAKG,SAAS,CAAEH,cAPpB,EAUEI,mBAAqB,WACnB,EAAKD,UAAS,SAAAE,GAAS,MAAK,CAAEN,YAAaM,EAAUN,gBAXzD,EAcEO,iBAAmB,WACjB,EAAKH,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KAfzD,4CAkBE,WAAU,IAAD,OACDQ,EAlDH,SACLC,EADK,GAGJ,IADCR,EACF,EADEA,SAAUD,EACZ,EADYA,WAENU,EAAW,YAAOD,GAExB,OAAQR,GACN,KAAKL,EAASe,SACZD,EAAYE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC3C,MACF,KAAKlB,EAASoB,OACZN,EAAYE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAY5C,OAPIjB,GACFU,EAAYQ,UAIdC,QAAQC,IAAInB,EAAUD,GAEfU,EA2BgBW,CACnBxB,EACA,CAAEI,SAAUqB,KAAKvB,MAAME,SAAUD,WAAYsB,KAAKvB,MAAMC,aAG1D,OACE,sBAAKuB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBD,KAAKvB,MAAME,WAAaL,EAASe,UAAY,YAC1Ec,QAAS,kBAAM,EAAKtB,gBAAgBP,EAASe,WAH/C,iCAQA,wBACEa,KAAK,SACLD,UAAS,4BAAuBD,KAAKvB,MAAME,WAAaL,EAASoB,QAAU,YAC3ES,QAAS,kBAAM,EAAKtB,gBAAgBP,EAASoB,SAH/C,4BAQA,wBACEQ,KAAK,SACLD,UAAS,iBAAYD,KAAKvB,MAAMC,WAAa,aAAe,YAC5DyB,QAASH,KAAKjB,mBAHhB,sBAQEiB,KAAKvB,MAAME,UAAYqB,KAAKvB,MAAMC,aAClC,wBACEwB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKf,iBAHhB,sBAUJ,6BACGC,EAAakB,KAAI,SAAAC,GAChB,OACE,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eAjEtC,GAAyBC,IAAMC,eCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.96d63c5a.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const sortedGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      sortedGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      sortedGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n  }\n\n  if (isReversed) {\n    sortedGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return sortedGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSortClick = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  handleReverseClick = () => {\n    this.setState(prevState => ({ isReversed: !prevState.isReversed }));\n  };\n\n  handleResetClick = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType: this.state.sortType, isReversed: this.state.isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${this.state.sortType !== SortType.ALPHABET && 'is-light'}`}\n            onClick={() => this.handleSortClick(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${this.state.sortType !== SortType.LENGTH && 'is-light'}`}\n            onClick={() => this.handleSortClick(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button ${this.state.isReversed ? 'is-warning' : 'is-light'}`}\n            onClick={this.handleReverseClick}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType || this.state.isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleResetClick}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => {\n            return (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}